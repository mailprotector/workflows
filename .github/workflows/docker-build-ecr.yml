name: Build Docker image and push to ECR

on:
  workflow_call: 
    inputs:
      ECR_REPOSITORY:
        required: true
        type: string
      build_env:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true

jobs:
  build-release:
    name: Build Docker image and push to ECR
    runs-on: ubuntu-latest
  
    steps:
      - uses: actions/checkout@v2
  
      - name: Configure AWS staging credentials
        if: github.ref == 'refs/heads/staging'
        id: config-aws-staging
        uses: aws-actions/configure-aws-credentials@v1
        with:
          AWS_ACCESS_KEY_ID: $STAGING_ACCESS_KEY_ID
          AWS_SECRET_ACCESS_KEY: $STAGING_SECRET_ACCESS_KEY
          AWS_REGION: $AWS_REGION_1

      - name: Configure AWS production credentials
        if: github.ref == 'refs/heads/main'
        id: config-aws-production
        uses: aws-actions/configure-aws-credentials@v1
        with:
          AWS_ACCESS_KEY_ID: $PRODUCTION_ACCESS_KEY_ID
          AWS_SECRET_ACCESS_KEY: $PRODUCTION_SECRET_ACCESS_KEY
          AWS_REGION: $AWS_REGION_1
  
      - name: Prepare
        id: prep
        run: |
          TAG=$(echo $GITHUB_SHA | head -c7)
          echo ::set-output name=tagged_image::${TAG}
          echo ::set-output name=latest_image::latest
          echo ::set-output name=tag::${TAG}
  
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
  
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
  
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx
  
      - name: Build image
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          build-args: |
            #AWS_REGION=${{ secrets.AWS_REGION }}
            AWS_REGION=${{ steps.config-aws-*.outputs.AWS_REGION }}
          file: ./Dockerfile
          push: false
          load: true
          tags: ${{ steps.prep.outputs.tagged_image }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
  
      - name: Tag and Push image to AWS ECR as SHA
        env:
          ECR_URL: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.ECR_REPOSITORY }}:${{ steps.prep.outputs.tagged_image }}
        run: |
          docker tag ${{ steps.prep.outputs.tagged_image }} ${{ env.ECR_URL }}
          docker push ${{ env.ECR_URL }}
  
      - name: Tag and Push image to AWS ECR as latest
        #if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
        env:
          ECR_URL: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.ECR_REPOSITORY }}:${{ steps.prep.outputs.latest_image }}
        run: |
          docker tag ${{ steps.prep.outputs.tagged_image }} ${{ env.ECR_URL }}
          docker push ${{ env.ECR_URL }}
  
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache/
          mv /tmp/.buildx-cache-new/ /tmp/.buildx-cache/